// <auto-generated />
using System;
using CBR_Minified;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CBR_Minified.Migrations
{
    [DbContext(typeof(CbrDbContext))]
    [Migration("20231027220408_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CBR_Minified.DbModels.CurrencyCourse", b =>
                {
                    b.Property<string>("CurrencyId")
                        .HasColumnType("text");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CharCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Nominal")
                        .HasColumnType("integer");

                    b.Property<string>("NumCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Value")
                        .HasColumnType("double precision");

                    b.Property<double>("VunitRate")
                        .HasColumnType("double precision");

                    b.HasKey("CurrencyId", "Date");

                    b.HasIndex("CurrencyId", "Date");

                    b.ToTable("CurrencyCourses");
                });
#pragma warning restore 612, 618
        }
    }
}
